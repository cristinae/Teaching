# config.yaml

## Where the samples will be written
save_data: run

# Training files
data:
    corpus_1:
        path_src: XXXXX
        path_tgt: XXXXX
        transforms: [filtertoolong]
    valid:
        path_src: XXXXX
        path_tgt: XXXXX
        transforms: [filtertoolong]

# Vocabulary files, generated by onmt_build_vocab
src_vocab: run/source.fr.vocab
tgt_vocab: run/target.en.vocab

# Vocabulary size - should be the same as in BPE/sentencepiece
src_vocab_size: XXXXX
tgt_vocab_size: XXXXX

# Filter out source/target longer than n if [filtertoolong] enabled
src_seq_length: 150          # remember the cleaning before giza++? Same parameter, different reason.
src_seq_length: 150

# Tokenization options
src_subword_model: source.model
tgt_subword_model: target.model

# Where to save the log file and the output models/checkpoints
log_file: train.log
save_model: XXXXX

# Stop training if it does not improve after n validations
early_stopping: 4

# Default: 5000 - Save a model checkpoint for each n
save_checkpoint_steps: 500

# To save space, limit checkpoints to last n
keep_checkpoint: 5

seed: 3435

# Default: 100000 - Train the model to max n steps 
# Increase to 200000 or more for large datasets
# For fine-tuning, add up the required steps to the original steps
train_steps: 3000

# Default: 10000 - Run validation after n steps
valid_steps: 500

report_every: 100

# Number of GPUs, and IDs of GPUs
world_size: 1
gpu_ranks: [0]

# Batching
bucket_size: 262144
num_workers: 0  # Default: 2, set to 0 when RAM out of memory
batch_type: "tokens"
batch_size: 4096   # Tokens per batch, change when CUDA out of memory
valid_batch_size: 2048
max_generator_batches: 2
accum_count: [4]
accum_steps: [0]

# Optimization
model_dtype: "fp16"
optim: "adam"
learning_rate: XXXXX
warmup_steps: XXXXX    # Default: 4000 - for large datasets, try up to 8000
decay_method: "noam"
adam_beta2: 0.998
max_grad_norm: 0
label_smoothing: 0.1
param_init: 0
param_init_glorot: true
normalization: "tokens"

# Model
encoder_type: transformer
decoder_type: transformer
position_encoding: true
enc_layers: XXXXX         # These two (and some params below) might be smaller in low-resourced settings
dec_layers: XXXXX
heads: XXXXX
hidden_size: XXXXX
word_vec_size: XXXXX
transformer_ff: XXXXX
dropout_steps: [0]
dropout: [0.1]
attention_dropout: [0.1]
